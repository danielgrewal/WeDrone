@model DashboardModel

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
<style>
    body {
        color: #666;
        background: #f5f5f5;
        font-family: 'Roboto', sans-serif;
    }

    .table-responsive {
        margin: 30px 0;
    }

    table.table tr th, table.table tr td {
        border-color: #e9e9e9;
    }

    table.table-striped tbody tr:nth-of-type(odd) {
        background-color: #fcfcfc;
    }

    .table-wrapper {
        min-width: 1000px;
        background: #fff;
        padding: 20px;
        box-shadow: 0 1px 1px rgba(0,0,0,.05);
    }

    .pagination {
        margin: 10px 0 5px;
    }

        .pagination li a {
            border: none;
            min-width: 30px;
            min-height: 30px;
            color: #999;
            margin: 0 2px;
            line-height: 30px;
            border-radius: 4px !important;
            text-align: center;
            padding: 0;
        }

            .pagination li a:hover {
                color: #666;
            }

        .pagination li.active a, .pagination li.active a.page-link {
            background: #6aa84f;
        }

            .pagination li.active a:hover {
                background: #45aba0;
            }

        .pagination li:first-child a, .pagination li:last-child a {
            padding: 0 10px;
        }

        .pagination li.disabled a {
            color: #ccc;
        }

        .pagination li i {
            font-size: 17px;
            position: relative;
            top: 1px;
            margin: 0 2px;
        }
</style>

<div class="container-xl mt-5">
    <div class="d-flex">
        <div class="card text-center mb-5 mr-5" style="width: 16rem;">
            <div class="card-body">
                <h4 class="card-title">Customers With Orders</h4>
                <h1 class="card-text">@Model.CustomersWithFilledOrders</h1>
            </div>
        </div>
        <div class="card text-center mb-5 mr-5" style="width: 16rem;">
            <div class="card-body">
                <h4 class="card-title">Orders With Weight > 10kg</h4>
                <h1 class="card-text">@Model.OrdersWithWeightOver10</h1>
            </div>
        </div>
        <div class="card text-center mb-5 mr-5" style="width: 16rem;">
            <div class="card-body">
                <h4 class="card-title">Orders With Volume > 1 cubic meter</h4>
                <h1 class="card-text">@Model.OrdersWithVolumeOver1</h1>
            </div>
        </div>
        <div class="card text-center mb-5" style="width: 16rem;">
            <div class="card-body">
                <h4 class="card-title">Orders Delivered</h4>
                <h1 class="card-text">@Model.OrdersDelivered</h1>
            </div>
        </div>
    </div>

    <h3>In-Progress Orders</h3>
    <div class="table-responsive">
        <div class="table-wrapper">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Order #</th>
                        <th>Pick-up Address</th>
                        <th>Dropoff Address</th>
                        <th>Current Status</th>
                        <th>Last Update</th>
                        <th>Ordered On</th>
                        <th>Distance</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var orders = Model.Orders.Where(o => o.CurrentStatus != "Delivered");

                    }
                    @foreach (var order in orders)
                    {
                        var details = Model.SubmittedOrders.FirstOrDefault(o => o.OrderId == order.OrderId);
                        <tr>
                            <td>@order.OrderId</td>
                            <td>@order.PackagePickup</td>
                            <td>@order.PackageDestination</td>
                            <td>@order.CurrentStatus</td>
                            <td>@order.LastUpdate</td>
                            <td>@order.OrderedOn</td>
                            <td>@details.Distance</td>
                            <td><a href="Orders/@order.OrderId">View</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <h3>Completed Orders</h3>
    <div class="table-responsive">
        <div class="table-wrapper">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Order #</th>
                        <th>Pick-up Address</th>
                        <th>Dropoff Address</th>
                        <th>Current Status</th>
                        <th>Last Update</th>
                        <th>Ordered On</th>
                        <th>Distance</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var delivered = Model.Orders.Where(o => o.CurrentStatus == "Delivered");
                    }

                    @foreach (var order in delivered)
                    {
                        var details = Model.SubmittedOrders.FirstOrDefault(o => o.OrderId == order.OrderId);
                        <tr>
                            <td>@order.OrderId</td>
                            <td>@order.PackagePickup</td>
                            <td>@order.PackageDestination</td>
                            <td>@order.CurrentStatus</td>
                            <td>@order.LastUpdate</td>
                            <td>@order.OrderedOn</td>
                            <td>@details.Distance</td>
                            <td><a href="Orders/@order.OrderId">View</a></td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>

    <h3>App Users</h3>
    <div class="table-responsive">
        <div class="table-wrapper">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>User Id</th>
                        <th>Username</th>
                        <th>Name</th>
                        <th>Num. Orders</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.AllUsersAndTheirOrders.GroupBy(u => u.UserId).Select(g => g.FirstOrDefault()))
                    {
                        <tr>
                            <td>@user.UserId</td>
                            <td>@user.Username</td>
                            <td>@user.Name</td>
                            <td>@Model.SubmittedOrders.Where(u => u.UserId == user.UserId).Count()</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <h3>Drone Sites</h3>
    <div class="table-responsive">
        <div class="table-wrapper">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Location Id</th>
                        <th>Name</th>
                        <th>Latitude</th>
                        <th>Longitude</th>
                        <th>Address</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var site in Model.FacilityNodes)
                    {
                        <tr>
                            <td>@site.LocationId</td>
                            <td>@site.Name</td>
                            <td>@site.Latitude</td>
                            <td>@site.Longitude</td>
                            <td>@site.Address</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <h3>Flight Legs < 10km</h3>
    <div class="table-responsive">
        <div class="table-wrapper">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Flightleg Id</th>
                        <th>From Facility</th>
                        <th>To Facility</th>
                        <th>Distance</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var fl in Model.FlightLegsLessThan10)
                    {
                        <tr>
                            <td>@fl.FlightlegId</td>
                            <td>@fl.FromAddress</td>
                            <td>@fl.ToAddress</td>
                            <td>@fl.Distance</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
