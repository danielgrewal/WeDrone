// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeDrone.Web.Core.Persistence;

#nullable disable

namespace WeDrone.Web.Migrations
{
    [DbContext(typeof(WeDroneContext))]
    partial class WeDroneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Flightleg", b =>
                {
                    b.Property<int>("FlightlegId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightlegId"), 1L, 1);

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("FromId")
                        .HasColumnType("int");

                    b.Property<int>("ToId")
                        .HasColumnType("int");

                    b.HasKey("FlightlegId");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("Flightlegs");

                    b.HasData(
                        new
                        {
                            FlightlegId = 1,
                            Distance = 9.98m,
                            FromId = 1,
                            ToId = 2
                        },
                        new
                        {
                            FlightlegId = 2,
                            Distance = 9.98m,
                            FromId = 2,
                            ToId = 1
                        },
                        new
                        {
                            FlightlegId = 3,
                            Distance = 17.43m,
                            FromId = 1,
                            ToId = 3
                        },
                        new
                        {
                            FlightlegId = 4,
                            Distance = 17.43m,
                            FromId = 3,
                            ToId = 1
                        },
                        new
                        {
                            FlightlegId = 5,
                            Distance = 19.77m,
                            FromId = 1,
                            ToId = 4
                        },
                        new
                        {
                            FlightlegId = 6,
                            Distance = 19.77m,
                            FromId = 4,
                            ToId = 1
                        },
                        new
                        {
                            FlightlegId = 7,
                            Distance = 23.48m,
                            FromId = 1,
                            ToId = 5
                        },
                        new
                        {
                            FlightlegId = 8,
                            Distance = 23.48m,
                            FromId = 5,
                            ToId = 1
                        },
                        new
                        {
                            FlightlegId = 9,
                            Distance = 38.95m,
                            FromId = 1,
                            ToId = 6
                        },
                        new
                        {
                            FlightlegId = 10,
                            Distance = 38.95m,
                            FromId = 6,
                            ToId = 1
                        },
                        new
                        {
                            FlightlegId = 11,
                            Distance = 65.47m,
                            FromId = 1,
                            ToId = 7
                        },
                        new
                        {
                            FlightlegId = 12,
                            Distance = 65.47m,
                            FromId = 7,
                            ToId = 1
                        },
                        new
                        {
                            FlightlegId = 13,
                            Distance = 27.13m,
                            FromId = 2,
                            ToId = 3
                        },
                        new
                        {
                            FlightlegId = 14,
                            Distance = 27.13m,
                            FromId = 3,
                            ToId = 2
                        },
                        new
                        {
                            FlightlegId = 15,
                            Distance = 21.24m,
                            FromId = 2,
                            ToId = 4
                        },
                        new
                        {
                            FlightlegId = 16,
                            Distance = 21.24m,
                            FromId = 4,
                            ToId = 2
                        },
                        new
                        {
                            FlightlegId = 17,
                            Distance = 28.02m,
                            FromId = 2,
                            ToId = 5
                        },
                        new
                        {
                            FlightlegId = 18,
                            Distance = 28.02m,
                            FromId = 5,
                            ToId = 2
                        },
                        new
                        {
                            FlightlegId = 19,
                            Distance = 44.85m,
                            FromId = 2,
                            ToId = 6
                        },
                        new
                        {
                            FlightlegId = 20,
                            Distance = 44.85m,
                            FromId = 6,
                            ToId = 2
                        },
                        new
                        {
                            FlightlegId = 21,
                            Distance = 71.51m,
                            FromId = 2,
                            ToId = 7
                        },
                        new
                        {
                            FlightlegId = 22,
                            Distance = 71.51m,
                            FromId = 7,
                            ToId = 2
                        },
                        new
                        {
                            FlightlegId = 23,
                            Distance = 23.67m,
                            FromId = 3,
                            ToId = 4
                        },
                        new
                        {
                            FlightlegId = 24,
                            Distance = 23.67m,
                            FromId = 4,
                            ToId = 3
                        },
                        new
                        {
                            FlightlegId = 25,
                            Distance = 20.05m,
                            FromId = 3,
                            ToId = 5
                        },
                        new
                        {
                            FlightlegId = 26,
                            Distance = 20.05m,
                            FromId = 5,
                            ToId = 3
                        },
                        new
                        {
                            FlightlegId = 27,
                            Distance = 28.64m,
                            FromId = 3,
                            ToId = 6
                        },
                        new
                        {
                            FlightlegId = 28,
                            Distance = 28.64m,
                            FromId = 6,
                            ToId = 3
                        },
                        new
                        {
                            FlightlegId = 29,
                            Distance = 53.11m,
                            FromId = 3,
                            ToId = 7
                        },
                        new
                        {
                            FlightlegId = 30,
                            Distance = 53.11m,
                            FromId = 7,
                            ToId = 3
                        },
                        new
                        {
                            FlightlegId = 31,
                            Distance = 9.15m,
                            FromId = 4,
                            ToId = 5
                        },
                        new
                        {
                            FlightlegId = 32,
                            Distance = 9.15m,
                            FromId = 5,
                            ToId = 4
                        },
                        new
                        {
                            FlightlegId = 33,
                            Distance = 25.81m,
                            FromId = 4,
                            ToId = 6
                        },
                        new
                        {
                            FlightlegId = 34,
                            Distance = 25.81m,
                            FromId = 6,
                            ToId = 4
                        },
                        new
                        {
                            FlightlegId = 35,
                            Distance = 51.8m,
                            FromId = 4,
                            ToId = 7
                        },
                        new
                        {
                            FlightlegId = 36,
                            Distance = 51.8m,
                            FromId = 7,
                            ToId = 4
                        },
                        new
                        {
                            FlightlegId = 37,
                            Distance = 17.11m,
                            FromId = 5,
                            ToId = 6
                        },
                        new
                        {
                            FlightlegId = 38,
                            Distance = 17.11m,
                            FromId = 6,
                            ToId = 5
                        },
                        new
                        {
                            FlightlegId = 39,
                            Distance = 43.6m,
                            FromId = 5,
                            ToId = 7
                        },
                        new
                        {
                            FlightlegId = 40,
                            Distance = 43.6m,
                            FromId = 7,
                            ToId = 5
                        },
                        new
                        {
                            FlightlegId = 41,
                            Distance = 26.68m,
                            FromId = 6,
                            ToId = 7
                        },
                        new
                        {
                            FlightlegId = 42,
                            Distance = 26.68m,
                            FromId = 7,
                            ToId = 6
                        });
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.FlightRoute", b =>
                {
                    b.Property<int>("FlightRouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightRouteId"), 1L, 1);

                    b.Property<int>("RouteEndId")
                        .HasColumnType("int");

                    b.Property<int>("RouteStartId")
                        .HasColumnType("int");

                    b.HasKey("FlightRouteId");

                    b.HasIndex("RouteEndId");

                    b.HasIndex("RouteStartId");

                    b.ToTable("FlightRoutes");

                    b.HasData(
                        new
                        {
                            FlightRouteId = 1,
                            RouteEndId = 2,
                            RouteStartId = 1
                        },
                        new
                        {
                            FlightRouteId = 2,
                            RouteEndId = 1,
                            RouteStartId = 2
                        },
                        new
                        {
                            FlightRouteId = 3,
                            RouteEndId = 3,
                            RouteStartId = 1
                        },
                        new
                        {
                            FlightRouteId = 4,
                            RouteEndId = 1,
                            RouteStartId = 3
                        },
                        new
                        {
                            FlightRouteId = 5,
                            RouteEndId = 4,
                            RouteStartId = 1
                        },
                        new
                        {
                            FlightRouteId = 6,
                            RouteEndId = 1,
                            RouteStartId = 4
                        },
                        new
                        {
                            FlightRouteId = 7,
                            RouteEndId = 5,
                            RouteStartId = 1
                        },
                        new
                        {
                            FlightRouteId = 8,
                            RouteEndId = 1,
                            RouteStartId = 5
                        },
                        new
                        {
                            FlightRouteId = 9,
                            RouteEndId = 6,
                            RouteStartId = 1
                        },
                        new
                        {
                            FlightRouteId = 10,
                            RouteEndId = 1,
                            RouteStartId = 6
                        },
                        new
                        {
                            FlightRouteId = 11,
                            RouteEndId = 7,
                            RouteStartId = 1
                        },
                        new
                        {
                            FlightRouteId = 12,
                            RouteEndId = 1,
                            RouteStartId = 7
                        },
                        new
                        {
                            FlightRouteId = 13,
                            RouteEndId = 3,
                            RouteStartId = 2
                        },
                        new
                        {
                            FlightRouteId = 14,
                            RouteEndId = 2,
                            RouteStartId = 3
                        },
                        new
                        {
                            FlightRouteId = 15,
                            RouteEndId = 4,
                            RouteStartId = 2
                        },
                        new
                        {
                            FlightRouteId = 16,
                            RouteEndId = 2,
                            RouteStartId = 4
                        },
                        new
                        {
                            FlightRouteId = 17,
                            RouteEndId = 5,
                            RouteStartId = 2
                        },
                        new
                        {
                            FlightRouteId = 18,
                            RouteEndId = 2,
                            RouteStartId = 5
                        },
                        new
                        {
                            FlightRouteId = 19,
                            RouteEndId = 6,
                            RouteStartId = 2
                        },
                        new
                        {
                            FlightRouteId = 20,
                            RouteEndId = 2,
                            RouteStartId = 6
                        },
                        new
                        {
                            FlightRouteId = 21,
                            RouteEndId = 7,
                            RouteStartId = 2
                        },
                        new
                        {
                            FlightRouteId = 22,
                            RouteEndId = 2,
                            RouteStartId = 7
                        },
                        new
                        {
                            FlightRouteId = 23,
                            RouteEndId = 4,
                            RouteStartId = 3
                        },
                        new
                        {
                            FlightRouteId = 24,
                            RouteEndId = 3,
                            RouteStartId = 4
                        },
                        new
                        {
                            FlightRouteId = 25,
                            RouteEndId = 5,
                            RouteStartId = 3
                        },
                        new
                        {
                            FlightRouteId = 26,
                            RouteEndId = 3,
                            RouteStartId = 5
                        },
                        new
                        {
                            FlightRouteId = 27,
                            RouteEndId = 6,
                            RouteStartId = 3
                        },
                        new
                        {
                            FlightRouteId = 28,
                            RouteEndId = 3,
                            RouteStartId = 6
                        },
                        new
                        {
                            FlightRouteId = 29,
                            RouteEndId = 7,
                            RouteStartId = 3
                        },
                        new
                        {
                            FlightRouteId = 30,
                            RouteEndId = 3,
                            RouteStartId = 7
                        },
                        new
                        {
                            FlightRouteId = 31,
                            RouteEndId = 5,
                            RouteStartId = 4
                        },
                        new
                        {
                            FlightRouteId = 32,
                            RouteEndId = 4,
                            RouteStartId = 5
                        },
                        new
                        {
                            FlightRouteId = 33,
                            RouteEndId = 6,
                            RouteStartId = 4
                        },
                        new
                        {
                            FlightRouteId = 34,
                            RouteEndId = 4,
                            RouteStartId = 6
                        },
                        new
                        {
                            FlightRouteId = 35,
                            RouteEndId = 7,
                            RouteStartId = 4
                        },
                        new
                        {
                            FlightRouteId = 36,
                            RouteEndId = 4,
                            RouteStartId = 7
                        },
                        new
                        {
                            FlightRouteId = 37,
                            RouteEndId = 6,
                            RouteStartId = 5
                        },
                        new
                        {
                            FlightRouteId = 38,
                            RouteEndId = 5,
                            RouteStartId = 6
                        },
                        new
                        {
                            FlightRouteId = 39,
                            RouteEndId = 7,
                            RouteStartId = 5
                        },
                        new
                        {
                            FlightRouteId = 40,
                            RouteEndId = 5,
                            RouteStartId = 7
                        },
                        new
                        {
                            FlightRouteId = 41,
                            RouteEndId = 7,
                            RouteStartId = 6
                        },
                        new
                        {
                            FlightRouteId = 42,
                            RouteEndId = 6,
                            RouteStartId = 7
                        });
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.FlightRouteStep", b =>
                {
                    b.Property<int>("FlightRouteId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentLegId")
                        .HasColumnType("int");

                    b.Property<bool>("IsInitialLeg")
                        .HasColumnType("bit");

                    b.Property<int?>("NextLegId")
                        .HasColumnType("int");

                    b.HasKey("FlightRouteId", "CurrentLegId");

                    b.HasIndex("CurrentLegId");

                    b.HasIndex("NextLegId");

                    b.ToTable("FlightRouteSteps");

                    b.HasData(
                        new
                        {
                            FlightRouteId = 1,
                            CurrentLegId = 1,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 2,
                            CurrentLegId = 2,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 3,
                            CurrentLegId = 3,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 4,
                            CurrentLegId = 4,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 5,
                            CurrentLegId = 5,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 6,
                            CurrentLegId = 6,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 7,
                            CurrentLegId = 7,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 8,
                            CurrentLegId = 8,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 9,
                            CurrentLegId = 7,
                            IsInitialLeg = true,
                            NextLegId = 37
                        },
                        new
                        {
                            FlightRouteId = 9,
                            CurrentLegId = 37,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 10,
                            CurrentLegId = 38,
                            IsInitialLeg = true,
                            NextLegId = 8
                        },
                        new
                        {
                            FlightRouteId = 10,
                            CurrentLegId = 8,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 11,
                            CurrentLegId = 7,
                            IsInitialLeg = true,
                            NextLegId = 37
                        },
                        new
                        {
                            FlightRouteId = 11,
                            CurrentLegId = 37,
                            IsInitialLeg = false,
                            NextLegId = 41
                        },
                        new
                        {
                            FlightRouteId = 11,
                            CurrentLegId = 41,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 12,
                            CurrentLegId = 42,
                            IsInitialLeg = true,
                            NextLegId = 38
                        },
                        new
                        {
                            FlightRouteId = 12,
                            CurrentLegId = 38,
                            IsInitialLeg = false,
                            NextLegId = 8
                        },
                        new
                        {
                            FlightRouteId = 12,
                            CurrentLegId = 8,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 13,
                            CurrentLegId = 2,
                            IsInitialLeg = true,
                            NextLegId = 3
                        },
                        new
                        {
                            FlightRouteId = 13,
                            CurrentLegId = 3,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 14,
                            CurrentLegId = 4,
                            IsInitialLeg = true,
                            NextLegId = 1
                        },
                        new
                        {
                            FlightRouteId = 14,
                            CurrentLegId = 1,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 15,
                            CurrentLegId = 15,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 16,
                            CurrentLegId = 16,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 17,
                            CurrentLegId = 15,
                            IsInitialLeg = true,
                            NextLegId = 31
                        },
                        new
                        {
                            FlightRouteId = 17,
                            CurrentLegId = 31,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 18,
                            CurrentLegId = 32,
                            IsInitialLeg = true,
                            NextLegId = 16
                        },
                        new
                        {
                            FlightRouteId = 18,
                            CurrentLegId = 16,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 19,
                            CurrentLegId = 15,
                            IsInitialLeg = true,
                            NextLegId = 31
                        },
                        new
                        {
                            FlightRouteId = 19,
                            CurrentLegId = 31,
                            IsInitialLeg = false,
                            NextLegId = 37
                        },
                        new
                        {
                            FlightRouteId = 19,
                            CurrentLegId = 37,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 20,
                            CurrentLegId = 38,
                            IsInitialLeg = true,
                            NextLegId = 32
                        },
                        new
                        {
                            FlightRouteId = 20,
                            CurrentLegId = 32,
                            IsInitialLeg = false,
                            NextLegId = 16
                        },
                        new
                        {
                            FlightRouteId = 20,
                            CurrentLegId = 16,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 21,
                            CurrentLegId = 15,
                            IsInitialLeg = true,
                            NextLegId = 31
                        },
                        new
                        {
                            FlightRouteId = 21,
                            CurrentLegId = 31,
                            IsInitialLeg = false,
                            NextLegId = 37
                        },
                        new
                        {
                            FlightRouteId = 21,
                            CurrentLegId = 37,
                            IsInitialLeg = false,
                            NextLegId = 41
                        },
                        new
                        {
                            FlightRouteId = 21,
                            CurrentLegId = 41,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 22,
                            CurrentLegId = 42,
                            IsInitialLeg = true,
                            NextLegId = 38
                        },
                        new
                        {
                            FlightRouteId = 22,
                            CurrentLegId = 38,
                            IsInitialLeg = false,
                            NextLegId = 32
                        },
                        new
                        {
                            FlightRouteId = 22,
                            CurrentLegId = 32,
                            IsInitialLeg = false,
                            NextLegId = 16
                        },
                        new
                        {
                            FlightRouteId = 22,
                            CurrentLegId = 16,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 23,
                            CurrentLegId = 7,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 24,
                            CurrentLegId = 8,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 25,
                            CurrentLegId = 25,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 26,
                            CurrentLegId = 26,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 27,
                            CurrentLegId = 27,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 28,
                            CurrentLegId = 28,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 29,
                            CurrentLegId = 27,
                            IsInitialLeg = true,
                            NextLegId = 41
                        },
                        new
                        {
                            FlightRouteId = 29,
                            CurrentLegId = 41,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 30,
                            CurrentLegId = 42,
                            IsInitialLeg = true,
                            NextLegId = 28
                        },
                        new
                        {
                            FlightRouteId = 30,
                            CurrentLegId = 28,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 31,
                            CurrentLegId = 31,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 32,
                            CurrentLegId = 32,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 33,
                            CurrentLegId = 31,
                            IsInitialLeg = true,
                            NextLegId = 37
                        },
                        new
                        {
                            FlightRouteId = 33,
                            CurrentLegId = 37,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 34,
                            CurrentLegId = 38,
                            IsInitialLeg = true,
                            NextLegId = 32
                        },
                        new
                        {
                            FlightRouteId = 34,
                            CurrentLegId = 32,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 35,
                            CurrentLegId = 31,
                            IsInitialLeg = true,
                            NextLegId = 37
                        },
                        new
                        {
                            FlightRouteId = 35,
                            CurrentLegId = 37,
                            IsInitialLeg = false,
                            NextLegId = 41
                        },
                        new
                        {
                            FlightRouteId = 35,
                            CurrentLegId = 41,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 36,
                            CurrentLegId = 42,
                            IsInitialLeg = true,
                            NextLegId = 38
                        },
                        new
                        {
                            FlightRouteId = 36,
                            CurrentLegId = 38,
                            IsInitialLeg = false,
                            NextLegId = 32
                        },
                        new
                        {
                            FlightRouteId = 36,
                            CurrentLegId = 32,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 37,
                            CurrentLegId = 37,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 38,
                            CurrentLegId = 38,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 39,
                            CurrentLegId = 37,
                            IsInitialLeg = true,
                            NextLegId = 41
                        },
                        new
                        {
                            FlightRouteId = 39,
                            CurrentLegId = 41,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 40,
                            CurrentLegId = 42,
                            IsInitialLeg = true,
                            NextLegId = 38
                        },
                        new
                        {
                            FlightRouteId = 40,
                            CurrentLegId = 38,
                            IsInitialLeg = false
                        },
                        new
                        {
                            FlightRouteId = 41,
                            CurrentLegId = 41,
                            IsInitialLeg = true
                        },
                        new
                        {
                            FlightRouteId = 42,
                            CurrentLegId = 42,
                            IsInitialLeg = true
                        });
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Keyless.VwOrder", b =>
                {
                    b.Property<string>("CurrentStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Current Status");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last Update");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order Id");

                    b.Property<string>("OrderedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ordered By");

                    b.Property<DateTime>("OrderedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Ordered On");

                    b.Property<string>("PackageDestination")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Package Destination");

                    b.Property<string>("PackagePickup")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Package Pick-up");

                    b.ToView("vw_ShowAllOrders");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDroneFacility")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(17,14)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(17,14)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LocationId");

                    b.HasIndex("Address")
                        .IsUnique()
                        .HasFilter("[Address] IS NOT NULL");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address = "6301 Silver Dart Dr, Mississauga, ON L5P 1B2",
                            IsDroneFacility = true,
                            Latitude = 43.68232877980147m,
                            Longitude = -79.62661047567958m,
                            Name = "Toronto Pearson International Airport"
                        },
                        new
                        {
                            LocationId = 2,
                            Address = "100 City Centre Dr, Mississauga, ON L5B 2C9",
                            IsDroneFacility = true,
                            Latitude = 43.5932704575367m,
                            Longitude = -79.6418354765629m,
                            Name = "Square One Shopping Centre"
                        },
                        new
                        {
                            LocationId = 3,
                            Address = "1 Bass Pro Mills Dr, Vaughan, ON L4K 5W4",
                            IsDroneFacility = true,
                            Latitude = 43.82549302652521m,
                            Longitude = -79.5381447146669m,
                            Name = "Vaughan Mills Mall"
                        },
                        new
                        {
                            LocationId = 4,
                            Address = "290 Bremner Blvd, Toronto, ON M5V 3L9",
                            IsDroneFacility = true,
                            Latitude = 43.64272145936629m,
                            Longitude = -79.38704607234244m,
                            Name = "CN Tower"
                        },
                        new
                        {
                            LocationId = 5,
                            Address = "770 Don Mills Rd., North York, ON M3C 1T3",
                            IsDroneFacility = true,
                            Latitude = 43.71718851953277m,
                            Longitude = -79.33851344772478m,
                            Name = "Ontario Science Centre"
                        },
                        new
                        {
                            LocationId = 6,
                            Address = "2000 Meadowvale Rd, Toronto, ON M1B 5K7",
                            IsDroneFacility = true,
                            Latitude = 43.82096417612802m,
                            Longitude = -79.1812287514316m,
                            Name = "Toronto Zoo"
                        },
                        new
                        {
                            LocationId = 7,
                            Address = "2000 Simcoe St N, Oshawa, ON L1G 0C5",
                            IsDroneFacility = true,
                            Latitude = 43.94565647325994m,
                            Longitude = -78.89679613001036m,
                            Name = "Ontario Technology University"
                        });
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int?>("FlightRouteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OrderFilled")
                        .HasColumnType("datetime2");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("FlightRouteId");

                    b.HasIndex("OriginId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.OrderHistory", b =>
                {
                    b.Property<int>("Orderid")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Distance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("FromId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Orderid", "ValidFrom");

                    b.HasIndex("FromId");

                    b.HasIndex("StatusId");

                    b.HasIndex("ToId");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Name = "Pending Pick-up"
                        },
                        new
                        {
                            StatusId = 2,
                            Name = "Order Retrieved"
                        },
                        new
                        {
                            StatusId = 3,
                            Name = "In Transit"
                        },
                        new
                        {
                            StatusId = 4,
                            Name = "Pending Drop-off"
                        },
                        new
                        {
                            StatusId = 5,
                            Name = "Delivered"
                        },
                        new
                        {
                            StatusId = 6,
                            Name = "Cancelled"
                        });
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "Usman Mahmood",
                            Password = "password",
                            Username = "usman"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "Daniel Grewal",
                            Password = "password",
                            Username = "daniel"
                        },
                        new
                        {
                            UserId = 3,
                            Name = "Mohammed Adnan Hashmi",
                            Password = "password",
                            Username = "adnan"
                        },
                        new
                        {
                            UserId = 4,
                            Name = "Karanvir Bhogal",
                            Password = "password",
                            Username = "karanvir"
                        });
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Flightleg", b =>
                {
                    b.HasOne("WeDrone.Web.Core.Domain.Location", "From")
                        .WithMany("FromFlightlegs")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WeDrone.Web.Core.Domain.Location", "To")
                        .WithMany("ToFlightlegs")
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.FlightRoute", b =>
                {
                    b.HasOne("WeDrone.Web.Core.Domain.Location", "RouteEnd")
                        .WithMany("EndFlightRoutes")
                        .HasForeignKey("RouteEndId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WeDrone.Web.Core.Domain.Location", "RouteStart")
                        .WithMany("StartFlightRoutes")
                        .HasForeignKey("RouteStartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RouteEnd");

                    b.Navigation("RouteStart");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.FlightRouteStep", b =>
                {
                    b.HasOne("WeDrone.Web.Core.Domain.Flightleg", "CurrentLeg")
                        .WithMany("CurrentLegSteps")
                        .HasForeignKey("CurrentLegId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WeDrone.Web.Core.Domain.Flightleg", "NextLeg")
                        .WithMany("NextlegSteps")
                        .HasForeignKey("NextLegId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CurrentLeg");

                    b.Navigation("NextLeg");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Order", b =>
                {
                    b.HasOne("WeDrone.Web.Core.Domain.Location", "Destination")
                        .WithMany("DestinationOrders")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WeDrone.Web.Core.Domain.FlightRoute", "FlightRoute")
                        .WithMany("Orders")
                        .HasForeignKey("FlightRouteId");

                    b.HasOne("WeDrone.Web.Core.Domain.Location", "Origin")
                        .WithMany("OriginOrders")
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WeDrone.Web.Core.Domain.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("FlightRoute");

                    b.Navigation("Origin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.OrderHistory", b =>
                {
                    b.HasOne("WeDrone.Web.Core.Domain.Location", "From")
                        .WithMany("FromHistory")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WeDrone.Web.Core.Domain.Order", "Order")
                        .WithMany("HistoryEntries")
                        .HasForeignKey("Orderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeDrone.Web.Core.Domain.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeDrone.Web.Core.Domain.Location", "To")
                        .WithMany("ToHistory")
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("From");

                    b.Navigation("Order");

                    b.Navigation("Status");

                    b.Navigation("To");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Flightleg", b =>
                {
                    b.Navigation("CurrentLegSteps");

                    b.Navigation("NextlegSteps");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.FlightRoute", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Location", b =>
                {
                    b.Navigation("DestinationOrders");

                    b.Navigation("EndFlightRoutes");

                    b.Navigation("FromFlightlegs");

                    b.Navigation("FromHistory");

                    b.Navigation("OriginOrders");

                    b.Navigation("StartFlightRoutes");

                    b.Navigation("ToFlightlegs");

                    b.Navigation("ToHistory");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.Order", b =>
                {
                    b.Navigation("HistoryEntries");
                });

            modelBuilder.Entity("WeDrone.Web.Core.Domain.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
